{"ast":null,"code":"import ShopActionsTypes from \"./shop.types\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nexport const fetchCollectionsStart = collectionsMap => ({\n  type: ShopActionsTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsStartAync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionsStart);\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot); // updateCollections(collectionsMap);\n\n      this.setState({\n        loading: false\n      });\n    });\n  };\n};","map":{"version":3,"sources":["c:/Users/Valy/Desktop/e-commerce app/src/redux/shop/shop.actions.js"],"names":["ShopActionsTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","collectionsMap","type","FETCH_COLLECTIONS_START","fetchCollectionsStartAync","dispatch","collectionRef","collection","get","then","snapshot","setState","loading"],"mappings":"AAAA,OAAOA,gBAAP,MAA6B,cAA7B;AACA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,OAAO,MAAMC,qBAAqB,GAAIC,cAAD,KAAqB;AACxDC,EAAAA,IAAI,EAAEL,gBAAgB,CAACM;AADiC,CAArB,CAA9B;AAIP,OAAO,MAAMC,yBAAyB,GAAG,MAAM;AAC7C,SAAQC,QAAD,IAAc;AACnB,UAAMC,aAAa,GAAGR,SAAS,CAACS,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACL,qBAAD,CAAR;AAEAM,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAA0BC,QAAD,IAAc;AACrC,YAAMT,cAAc,GAAGF,+BAA+B,CAACW,QAAD,CAAtD,CADqC,CAErC;;AACA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAJD;AAKD,GATD;AAUD,CAXM","sourcesContent":["import ShopActionsTypes from \"./shop.types\";\r\nimport {\r\n  firestore,\r\n  convertCollectionsSnapshotToMap,\r\n} from \"../../firebase/firebase.utils\";\r\n\r\nexport const fetchCollectionsStart = (collectionsMap) => ({\r\n  type: ShopActionsTypes.FETCH_COLLECTIONS_START,\r\n});\r\n\r\nexport const fetchCollectionsStartAync = () => {\r\n  return (dispatch) => {\r\n    const collectionRef = firestore.collection(\"collections\");\r\n    dispatch(fetchCollectionsStart);\r\n\r\n    collectionRef.get().then((snapshot) => {\r\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n      // updateCollections(collectionsMap);\r\n      this.setState({ loading: false });\r\n    });\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}